// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Relude_List = require("relude/src/Relude_List.bs.js");
var Relude_Option = require("relude/src/Relude_Option.bs.js");
var Relude_String = require("relude/src/Relude_String.bs.js");
var Relude_List_Specializations = require("relude/src/list/Relude_List_Specializations.bs.js");

function show($staropt$star, e) {
  var indent = $staropt$star !== undefined ? $staropt$star : 0;
  var spaces = Relude_String.repeat(indent, " ");
  switch (e.tag | 0) {
    case /* Outcome */0 :
        return "Outcome(" + (e[0] + ")");
    case /* CalculatedCharacteristic */1 :
        return "CalculatedCharacteristic(" + (e[0] + ")");
    case /* Long */2 :
        return e[0] + "L";
    case /* Float */3 :
        return e[0] + "F";
    case /* String */4 :
        return "\"" + (e[0] + "\"");
    case /* IfElse */5 :
        return "if( " + (show(indent, e[0]) + (" ){\n  " + (spaces + (show(indent + 2 | 0, e[1]) + ("\n" + (spaces + ("} else {\n  " + (spaces + (show(indent + 2 | 0, e[2]) + ("\n" + (spaces + "}")))))))))));
    case /* Comparison */6 :
        return show(undefined, e[1]) + (" " + (e[0] + (" " + show(undefined, e[2]))));
    case /* Or */7 :
        return "(" + (show(undefined, e[0]) + (" || " + (show(undefined, e[1]) + ")")));
    case /* And */8 :
        return show(undefined, e[0]) + (" && " + show(undefined, e[1]));
    case /* Not */9 :
        return "!" + show(undefined, e[0]);
    case /* Plus */10 :
        return show(undefined, e[0]) + (" + " + show(undefined, e[1]));
    case /* Times */11 :
        return show(undefined, e[0]) + (" * " + show(undefined, e[1]));
    case /* Characteristic */12 :
        return e[0] + ("." + e[1]);
    case /* ToLong */13 :
        return "(long)" + show(undefined, e[0]);
    case /* Coalesce */14 :
        return show(undefined, e[0]) + (" ?? " + show(undefined, e[1]));
    case /* IsDefined */15 :
        return "IsDefined(" + (show(undefined, e[0]) + ")");
    case /* Contains */16 :
        return "Contains(" + (show(undefined, e[0]) + (", " + (show(undefined, e[1]) + ")")));
    case /* Strip */17 :
        return "Strip(" + (show(undefined, e[0]) + ")");
    case /* List */18 :
        return "[" + (Curry._2(Relude_List_Specializations.$$String.joinWith, ", ", Relude_List.map((function (eta) {
                              return show(undefined, eta);
                            }))(e[0])) + "]");
    case /* Lookup */19 :
        return "Lookup(" + (show(undefined, e[0]) + (", " + (show(undefined, e[1]) + ")")));
    case /* Map */20 :
        return "{\n" + (Curry._2(Relude_List_Specializations.$$String.joinWith, ",\n", Relude_List.map((function (param) {
                              return spaces + ("  " + (show(undefined, param[0]) + (": " + show(undefined, param[1]))));
                            }))(e[0])) + (spaces + "\n}"));
    case /* Range */21 :
        var mapOption = function (o) {
          return Relude_Option.getOrElse("", Relude_Option.map((function (eta) {
                            return show(undefined, eta);
                          }), o));
        };
        return mapOption(e[0]) + (".." + mapOption(e[1]));
    
  }
}

exports.show = show;
/* Relude_List Not a pure module */
