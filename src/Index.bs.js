// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Decode = require("bs-decode/./src/Decode.bs.js");
var Future = require("reason-future/src/Future.bs.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Relude_Result = require("relude/src/Relude_Result.bs.js");
var Decode_ParseError = require("bs-decode/./src/Decode_ParseError.bs.js");
var Expression$JsonToDsl = require("./Expression.bs.js");
var StdinToJson$JsonToDsl = require("./StdinToJson.bs.js");
var ExpressionDecoder$JsonToDsl = require("./ExpressionDecoder.bs.js");
var Decode_AsResult_OfParseError = require("bs-decode/./src/Decode_AsResult_OfParseError.bs.js");

var parsed = Future.map(StdinToJson$JsonToDsl.readInput, (function (json) {
        return Belt_Option.getWithDefault(Belt_Option.map(Belt_Option.map(json, ExpressionDecoder$JsonToDsl.expressionDecoder), (function (v) {
                          return Relude_Result.map((function (eta) {
                                        return Expression$JsonToDsl.show(undefined, eta);
                                      }), Relude_Result.mapError(Decode_ParseError.failureToDebugString, v));
                        })), /* Error */Block.__(1, ["Invalid JSON"]));
      }));

Future.tapError(Future.tapOk(parsed, (function (prim) {
            console.log(prim);
            return /* () */0;
          })), (function (prim) {
        console.error(prim);
        return /* () */0;
      }));

exports.parsed = parsed;
/* parsed Not a pure module */
